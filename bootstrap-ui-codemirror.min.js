angular.module("schemaForm").run(["$templateCache",function(o){o.put("directives/decorators/bootstrap/codemirror/codemirror.html",'<div class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError()}"><div ng-init="form.model=model"><label for="{{form.key.slice(-1).pop()}}" class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div ng-if="form.codemirrorButtons" class="cm-buttons"><span class="btn-group" ng-repeat="buttonGroup in form.codemirrorButtons"><button ng-repeat="button in buttonGroup" ng-click="evalInScope(button.onClick)" type="button" class="btn btn-sm btn-default" id="btnBold" title="{{ button.title }}"><span ng-if="button.icon" class="glyphicon" ng-class="\'glyphicon-\' + button.icon"></span> <span ng-if="button.label" ng-bind-html="button.label"></span></button></span></div><div codemirror-buttons="" ui-codemirror="" ui-codemirror-opts="getCodemirrorOptions()" ng-style="form.style" class="{{form.fieldHtmlClass}}" ng-model="$$value$$" sf-changed="form" schema-validate="form"></div><span class="help-block">{{(hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider",function(o,r){r.addMapping("bootstrapDecorator","codemirror","directives/decorators/bootstrap/codemirror/codemirror.html"),r.createDirective("codemirror","directives/decorators/bootstrap/codemirror/codemirror.html")}]).directive("codemirrorButtons",function(){return{controller:["$scope",function(o){o.getCodemirrorOptions=function(){var r=angular.copy(o.form.codemirrorOptions);return r.onLoad=function(r){o.cm=r},r}}]}});